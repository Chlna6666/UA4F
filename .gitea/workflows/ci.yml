name: 构建 IPK 包

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:

  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        arch:
          - { name: x86_64, target: x86_64-unknown-linux-musl, sdk_url: "https://downloads.openwrt.org/releases/23.05.0/targets/x86/64/openwrt-sdk-23.05.0-x86-64.tar.xz" }
          - { name: aarch64, target: aarch64-unknown-linux-musl, sdk_url: "https://downloads.openwrt.org/releases/23.05.0/targets/rockchip/armv8/openwrt-sdk-23.05.0-armv8.tar.xz" }
          - { name: armv7, target: armv7-unknown-linux-musleabihf, sdk_url: "https://downloads.openwrt.org/releases/23.05.0/targets/mediatek/mt7629/openwrt-sdk-23.05.0-mt7629.tar.xz" }

    steps:
      - name: 检出源代码
        uses: actions/checkout@v4

      - name: 从 Cargo.toml 中提取版本号
        id: extract_version
        run: |
          version=$(grep '^version' Cargo.toml | sed 's/version = "\(.*\)"/\1/')
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: 安装 Rust 工具链
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          target: ${{ matrix.arch.target }}

      - name: 为 ARM 架构安装依赖
        if: matrix.arch.name != 'x86_64'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential gcc-arm-linux-gnueabihf gcc-aarch64-linux-gnu

      - name: 下载并准备 OpenWrt SDK
        run: |
          sudo apt-get update
          sudo apt-get install -y wget xz-utils
          echo "Downloading SDK from URL: ${{ matrix.arch.sdk_url }}"
          wget -q --show-progress --tries=3 --timeout=20 ${{ matrix.arch.sdk_url }} -O sdk.tar.xz
          if [ $? -ne 0 ]; then
            echo "Download failed after multiple attempts." && exit 1
          fi
          echo "Download completed. Checking file..."
          echo "Extracting SDK..."
          tar -xf sdk.tar.xz || { echo "Extraction failed!" && exit 1; }
          echo "Extraction completed. Listing SDK directory..."
          mv $(find . -maxdepth 1 -type d -name "openwrt-sdk-*") openwrt-sdk || { echo "SDK directory not found!" && exit 1; }
      
      
      

      - name: 将本地包复制到 SDK 中
        run: |
          if [ ! -d "./ua4f" ]; then
            echo "错误: 未找到 'ua4f' 包源代码目录!" && exit 1
          fi
          cp -r ./ua4f openwrt-sdk/package/
          echo "包 'ua4f' 已成功复制到 SDK 包目录中。"

      - name: 为包配置 SDK
        run: |
          cd openwrt-sdk
          make defconfig
          echo "CONFIG_PACKAGE_ua4f=m" >> .config
          make defconfig

      - name: 为 ${{ matrix.arch.name }} 架构编译 IPK 包
        run: |
          cd openwrt-sdk
          make package/ua4f/compile V=s || exit 1
          mkdir -p ../output/${{ matrix.arch.name }}
          cp bin/packages/${{ matrix.arch.name }}/ua4f/*.ipk ../output/${{ matrix.arch.name }}/ua4f_${{ steps.extract_version.outputs.version }}_${{ matrix.arch.name }}.ipk

      - name: 上传 IPK 包构件
        uses: actions/upload-artifact@v3
        with:
          name: ua4f-${{ matrix.arch.name }}
          path: output/${{ matrix.arch.name }}/ua4f_${{ steps.extract_version.outputs.version }}_${{ matrix.arch.name }}.ipk
          retention-days: 1
          compression-level: 9