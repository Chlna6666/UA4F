name: 构建 IPK 包

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:

  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        arch:
          - { name: x86_64, target: x86_64-unknown-linux-musl, sdk_url: "https://downloads.openwrt.org/releases/23.05.0/targets/x86/64/openwrt-sdk-23.05.0-x86-64_gcc-12.3.0_musl.Linux-x86_64.tar.xz" }
          - { name: aarch64, target: aarch64-unknown-linux-musl, sdk_url: "https://downloads.openwrt.org/releases/23.05.0/targets/rockchip/armv8/openwrt-sdk-23.05.0-rockchip-armv8_gcc-12.3.0_musl.Linux-x86_64.tar.xz" }
          - { name: armv7, target: armv7-unknown-linux-musleabihf, sdk_url: "https://downloads.openwrt.org/releases/23.05.0/targets/mediatek/mt7629/openwrt-sdk-23.05.0-mediatek-mt7629_gcc-12.3.0_musl_eabi.Linux-x86_64.tar.xz" }

    steps:
      - name: 检出源代码
        uses: actions/checkout@v4

      - name: 从 Cargo.toml 中提取版本号
        id: extract_version
        run: |
          version=$(grep '^version' Cargo.toml | sed 's/version = "\(.*\)"/\1/')
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: 安装 Rust 工具链
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          target: ${{ matrix.arch.target }}

      - name: 为 ARM 架构安装依赖
        if: matrix.arch.name != 'x86_64'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential gcc-arm-linux-gnueabihf gcc-aarch64-linux-gnu

      - name: 下载并准备 OpenWrt SDK
        run: |
          sudo apt-get update
          sudo apt-get install -y wget xz-utils
          wget ${{ matrix.arch.sdk_url }}
          tar -xf $(basename ${{ matrix.arch.sdk_url }})
          
          # 列出目录内容以确认解压后的文件夹名称
          echo "解压后当前目录内容："
          ls -l

          # 查找解压后的 SDK 目录名称
          SDK_DIR=$(find . -maxdepth 1 -type d -name "openwrt-sdk-*")
          if [ -z "$SDK_DIR" ]; then
            echo "错误: 未找到解压后的 SDK 目录！" && exit 1
          fi
          echo "找到的 SDK 目录：$SDK_DIR"
          mv "$SDK_DIR" openwrt-sdk


      - name: 将本地包复制到 SDK 中
        run: |
          if [ ! -d "./ua4f" ]; then
            echo "错误: 未找到 'ua4f' 包源代码目录!" && exit 1
          fi
          cp -r ./ua4f openwrt-sdk/package/
          echo "包 'ua4f' 已成功复制到 SDK 包目录中。"

      - name: 为包配置 SDK
        run: |
          cd openwrt-sdk
          make defconfig
          echo "CONFIG_PACKAGE_ua4f=m" >> .config
          make defconfig

      - name: 为 ${{ matrix.arch.name }} 架构编译 IPK 包
        run: |
          cd openwrt-sdk
          make package/ua4f/compile V=s || exit 1
          mkdir -p ../output/${{ matrix.arch.name }}
          cp bin/packages/${{ matrix.arch.name }}/ua4f/*.ipk ../output/${{ matrix.arch.name }}/ua4f_${{ steps.extract_version.outputs.version }}_${{ matrix.arch.name }}.ipk

      - name: 上传 IPK 包构件
        uses: actions/upload-artifact@v3
        with:
          name: ua4f-${{ matrix.arch.name }}
          path: output/${{ matrix.arch.name }}/ua4f_${{ steps.extract_version.outputs.version }}_${{ matrix.arch.name }}.ipk
          retention-days: 1
          compression-level: 9